Answer as an expert computational microbiologist.

We consider the following type of data in this analysis [G] (groups), [U] (genome content units), [A] (genome attributes), [S] (text snippet), [V] (value rules), [C] (comparative rules), defined as explained below.

[S]:
  Def: “part of the input text (sentence, part of a sentence, multiple sentences), from which one or multiple rules are extracted, which express expectation regarding contents of genomes in a group of organisms compared with a reference value or another group of organisms; it should be complete and concise, i.e. contain the whole part of the text, necessary to understand the expectation, but also not more that that”
[G]:
  Def: “group of prokaryotic organisms, with a group-defining commonality (e.g. common taxonomy, phenotype, habitat, geographical location)”
  properties:
    Name: “the name of the group (as reported in the text)”
    Type: “the type of commonality (e.g. ‘taxonomy’, ‘phenotype’...)”
[U]:
  Def: “one or a group of genome features, or product thereof”
  Examples:  single letters, codons for coding for an amino acid, a gene, the gene for a protein (defined by its name, function or similarity to other proteins), a part of a gene coding for a protein domain, a gene cluster, an operon, a metabolic pathway (i.e. genes coding for the enzymes involved in it), arrangements of genes or other features, CRISPRs, RNA genes, COG classes, protein families, enzyme classification numbers
  Properties:
    Name: “the name of the unit (as reported in the text)”
    Type: “the type of unit (e.g. “gene name”, “function”, “protein domain”, “COG”, “EC number”,...)”
[A]:
  Def: “measurable entity from a genome (whole genome or parts of it) related to a [U], i.e. its count, presence, relative frequency compared to another [U]”
  Properties:
    Region: region, where the [U] is measured
       -> whole genome (output as .), in most cases
       -> a type of molecule (“plasmids”, “chromosomes”)
       -> name of a chromosome, plasmid or part of the sequence
       NOT: a localization of the cell (e.g. “outer membrane” is wrong)
    Unit: the [U]
    Mode: e.g. presence, count, relative_frequency, length
      -> [A] with Mode 'presence' cannot be used in [C] rules
      -> Mode 'presence' shall be used for [A] referred to in [V] if [V].Value would otherwise be 0 and [V].Operator would be '>'; instead the [V].Value 'True' and [V].Operator '==' are used in this case
      -> Mode 'presence' shall be used for [A] referred to in [V] if [V].Value would otherwise be 0 and [V].Operator is '=='; instead the [V].Value 'False' and [V].Operator '==' are used in this case
      -> Use the Mode 'relative_frequency' only if really necessary
    Relative_unit:
      -> If Mode is not 'relative_frequency': None (output as .)
      -> if Mode is 'relative_frequency': a [U]; the count of Unit is divided by the count of this Relative_unit
[V]:
  Def: “value expectation rule, i.e. the expectation that in genomes of a [G], a [A] has a given value (e.g. 0.5) or lies in or outside a given value range (e.g. 1 to 10)”
  Properties:
    Snippet: the [S] from which the rule is derived
    Attribute: the [A]
    Operator: the comparison operator, e.g. <, >, ==, in_range, out_of_range; for Attribute.Mode presence use ==.
    Value: numerical value to compare to; one value if the operator is binary (e.g. smaller), two values for ranges; for Attribute.Mode presence use True or False.
    Group: the [G]
    Group_quantifier: e.g.when the text says that “seldomly, rarely, always, never” the expectation holds for “all, many, none, most” of the members of [G];
                      output . if the quantifier is "all" or "always"; use a different value only if really specified in the text

[C]:
  Def: “ comparative expectation rule, i.e. the expectation regarding the value of a [A] in a [G] compared to another [G]”
  Properties:
    Snippet: the [S] from which the rule is derived
    Attribute: the [A]
    Group1: the first [G]
    Group1_quantifier: e.g.when the text says that “seldomly, rarely, always, never” the expectation holds for “all, many, none, most” of the members of [G];
                      output . if the quantifier is "all" or "always"; use a different value only if really specified in the text
    Operator: the comparison operator for the value of [A] in Group1 vs Group2, e.g. >, <, ==.
    Group2: the second [G]
    Group2_quantifier:  e.g.when the text says that “seldomly, rarely, always, never” the expectation holds for “all, many, none, most” of the members of [G];
                      output . if the quantifier is "all" or "always"; use a different value only if really specified in the text

Your task will be to analyze a snippet of text from a scientific paper which I will provide, and extract from it rules ([C] or [V]) expressing the expected contents of a genome for a group of prokaryotic organisms.

Give the answer as a series of tab-separated-values lines defining [V], [C], [A], [U], [G] and [S].
  - The first field of each line is the single letter line type code (e.g. S).
  - The second field of each line is a unique ID assigned to the line.
    - Line IDs of S, V and C lines: the line type and a number (e.g. S1).
	  - Line IDs of G, A, U lines: line type, a two-lowercase letters code for the Type or Mode,  _,  a compact label (max 10 chars) consisting of letters and numbers. Examples: Gta_Bacteria or Uco_COG123, or Aco_COG123.
    - IDs are all unique. If an ID is used in a line to refer to another line (e.g. in C lines the ID for a G), then the line with that ID must be later output.

  - The third and following fields depend on the line type.
    Formatting and content of the lines:

    S	<ID>	<Snippet, shortened>
    G	<ID>	<Name>	<Type>
    U	<ID>	<Type>	<Name>
    A	<ID>	<Unit ID>	<Mode>	<RelativeUnit ID>	<Region>
    V	<ID>	<Snippet ID>	<Attribute ID>	<Group ID>	<Group_quantifier>	<Operator>	<Value”>
    C	<ID>	<Snippet ID>	<Attribute ID>	<Group1 ID>	<Group1_quantifier>	<Operator>	<Group2 ID>	<Group2_quantifier>

    - Snippet, shortened:
      Text snippets longer than 20 words are output as “{from}…{to}”; where {from} are the first 10 words of the snippet and {to} are the last 10 words of the snippet.

Sometimes the same information is present multiple times, but it is important to follow the format anwway.
For example: The line type is both output in the first field (e.g. S) and in the second field as first character of the ID (e.g. S1).
Also, if a COG unit is defined, COG will appear both in the <Type> field and as the beginning of the name
(e.g. COG12345) and eventually also in the generated ID for the line. This is all OK so.

Examples of lines well defined:

V	VA286	SA77	Aal_TAC	Gta_Thermococcales	.	==	False
C	CA1	SA65	Ac_t_ins_seq	Gt_Pfuriosus	.	>	Gc_Thcoc_not_Pfuriosus	.
U	Usg_aprA	specific_gene	adenylyl sulfate reductase (AprA)
A	Apr_amm_tr	Uf_amm_tr	presence	.	.
U	Uec_acCoA_carb	function:EC	6.4.1.2
G	Gta_Hhispanica	Haloarcula hispanica	taxonomic
G	Gge_arctic	Arctic	geographical
S	SA112	The present identification of Sec23/24 domain proteins in all...Fig. 1d) prompted us to search for potential coatomer proteins.

The output order shall be the following:
- first either a C or a V line
- then the Gs and the A referred to in that C or V line (and only those), if they were not defined after a previous C or V line
- then Us referred to in the A line (and only those), if they were not defined after a previous C or V line
- then the S line referred to in the C or V line (and only that), if it was not output after a previous C or V line
- continue the output in the same order as long as necessary for defining
  multiple C and V lines: i.e. restarting from either a C or V line, then the Gs and the A etc)

Do not produce multiple lines referring to the same [G], [A], [U] or [S].
Do not repeat G, A, U or S lines already output before.
Do not output empty lines.

To make the answer compact: multiple similar C or V for distinct units of the same type are never all output.
Instead a single [C] or [V] is output, followed by a comment line
indicating the similar unit or units, e.g.: ‘// same for units COG2, COG3, COG4’.
The comment lines immediately follows the U line to which it refers.
Include in the the text snippet [S] also the parts of the text about units mentioned in the comment.
In such cases do not output any C, V, A and U lines for those additional units.

Instead multiple C or V are output for different types or units, attributes, values, operators...
Try to output as many C or V lines as possible, as long as they are meaningful.

Instead of output V lines where Operator is > and Value is 0,
output them with Operator ==, Value == and use an Attribute with Mode presence.

Here is the text to be analyzed:
===

